// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: identity/ClaimsIdentityRpc.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from identity/ClaimsIdentityRpc.proto</summary>
public static partial class ClaimsIdentityRpcReflection {

  #region Descriptor
  /// <summary>File descriptor for identity/ClaimsIdentityRpc.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ClaimsIdentityRpcReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CiBpZGVudGl0eS9DbGFpbXNJZGVudGl0eVJwYy5wcm90bxoac2hhcmVkL051",
          "bGxhYmxlVHlwZXMucHJvdG8isAEKEVJwY0NsYWltc0lkZW50aXR5EiwKE2F1",
          "dGhlbnRpY2F0aW9uX3R5cGUYASABKAsyDy5OdWxsYWJsZVN0cmluZxIoCg9u",
          "YW1lX2NsYWltX3R5cGUYAiABKAsyDy5OdWxsYWJsZVN0cmluZxIoCg9yb2xl",
          "X2NsYWltX3R5cGUYAyABKAsyDy5OdWxsYWJsZVN0cmluZxIZCgZjbGFpbXMY",
          "BCADKAsyCS5ScGNDbGFpbSInCghScGNDbGFpbRINCgV2YWx1ZRgBIAEoCRIM",
          "CgR0eXBlGAIgASgJQiwKKmNvbS5taWNyb3NvZnQuYXp1cmUuZnVuY3Rpb25z",
          "LnJwYy5tZXNzYWdlc2IGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::NullableTypesReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::RpcClaimsIdentity), global::RpcClaimsIdentity.Parser, new[]{ "AuthenticationType", "NameClaimType", "RoleClaimType", "Claims" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RpcClaim), global::RpcClaim.Parser, new[]{ "Value", "Type" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// Light-weight representation of a .NET System.Security.Claims.ClaimsIdentity object.
/// This is the same serialization as found in EasyAuth, and needs to be kept in sync with
/// its ClaimsIdentitySlim definition, as seen in the WebJobs extension:
/// https://github.com/Azure/azure-webjobs-sdk-extensions/blob/dev/src/WebJobs.Extensions.Http/ClaimsIdentitySlim.cs
/// </summary>
public sealed partial class RpcClaimsIdentity : pb::IMessage<RpcClaimsIdentity> {
  private static readonly pb::MessageParser<RpcClaimsIdentity> _parser = new pb::MessageParser<RpcClaimsIdentity>(() => new RpcClaimsIdentity());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RpcClaimsIdentity> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClaimsIdentityRpcReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RpcClaimsIdentity() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RpcClaimsIdentity(RpcClaimsIdentity other) : this() {
    authenticationType_ = other.authenticationType_ != null ? other.authenticationType_.Clone() : null;
    nameClaimType_ = other.nameClaimType_ != null ? other.nameClaimType_.Clone() : null;
    roleClaimType_ = other.roleClaimType_ != null ? other.roleClaimType_.Clone() : null;
    claims_ = other.claims_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RpcClaimsIdentity Clone() {
    return new RpcClaimsIdentity(this);
  }

  /// <summary>Field number for the "authentication_type" field.</summary>
  public const int AuthenticationTypeFieldNumber = 1;
  private global::NullableString authenticationType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::NullableString AuthenticationType {
    get { return authenticationType_; }
    set {
      authenticationType_ = value;
    }
  }

  /// <summary>Field number for the "name_claim_type" field.</summary>
  public const int NameClaimTypeFieldNumber = 2;
  private global::NullableString nameClaimType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::NullableString NameClaimType {
    get { return nameClaimType_; }
    set {
      nameClaimType_ = value;
    }
  }

  /// <summary>Field number for the "role_claim_type" field.</summary>
  public const int RoleClaimTypeFieldNumber = 3;
  private global::NullableString roleClaimType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::NullableString RoleClaimType {
    get { return roleClaimType_; }
    set {
      roleClaimType_ = value;
    }
  }

  /// <summary>Field number for the "claims" field.</summary>
  public const int ClaimsFieldNumber = 4;
  private static readonly pb::FieldCodec<global::RpcClaim> _repeated_claims_codec
      = pb::FieldCodec.ForMessage(34, global::RpcClaim.Parser);
  private readonly pbc::RepeatedField<global::RpcClaim> claims_ = new pbc::RepeatedField<global::RpcClaim>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::RpcClaim> Claims {
    get { return claims_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RpcClaimsIdentity);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RpcClaimsIdentity other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(AuthenticationType, other.AuthenticationType)) return false;
    if (!object.Equals(NameClaimType, other.NameClaimType)) return false;
    if (!object.Equals(RoleClaimType, other.RoleClaimType)) return false;
    if(!claims_.Equals(other.claims_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (authenticationType_ != null) hash ^= AuthenticationType.GetHashCode();
    if (nameClaimType_ != null) hash ^= NameClaimType.GetHashCode();
    if (roleClaimType_ != null) hash ^= RoleClaimType.GetHashCode();
    hash ^= claims_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (authenticationType_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(AuthenticationType);
    }
    if (nameClaimType_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(NameClaimType);
    }
    if (roleClaimType_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(RoleClaimType);
    }
    claims_.WriteTo(output, _repeated_claims_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (authenticationType_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthenticationType);
    }
    if (nameClaimType_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(NameClaimType);
    }
    if (roleClaimType_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoleClaimType);
    }
    size += claims_.CalculateSize(_repeated_claims_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RpcClaimsIdentity other) {
    if (other == null) {
      return;
    }
    if (other.authenticationType_ != null) {
      if (authenticationType_ == null) {
        AuthenticationType = new global::NullableString();
      }
      AuthenticationType.MergeFrom(other.AuthenticationType);
    }
    if (other.nameClaimType_ != null) {
      if (nameClaimType_ == null) {
        NameClaimType = new global::NullableString();
      }
      NameClaimType.MergeFrom(other.NameClaimType);
    }
    if (other.roleClaimType_ != null) {
      if (roleClaimType_ == null) {
        RoleClaimType = new global::NullableString();
      }
      RoleClaimType.MergeFrom(other.RoleClaimType);
    }
    claims_.Add(other.claims_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (authenticationType_ == null) {
            AuthenticationType = new global::NullableString();
          }
          input.ReadMessage(AuthenticationType);
          break;
        }
        case 18: {
          if (nameClaimType_ == null) {
            NameClaimType = new global::NullableString();
          }
          input.ReadMessage(NameClaimType);
          break;
        }
        case 26: {
          if (roleClaimType_ == null) {
            RoleClaimType = new global::NullableString();
          }
          input.ReadMessage(RoleClaimType);
          break;
        }
        case 34: {
          claims_.AddEntriesFrom(input, _repeated_claims_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Light-weight representation of a .NET System.Security.Claims.Claim object.
/// This is the same serialization as found in EasyAuth, and needs to be kept in sync with
/// its ClaimSlim definition, as seen in the WebJobs extension:
/// https://github.com/Azure/azure-webjobs-sdk-extensions/blob/dev/src/WebJobs.Extensions.Http/ClaimSlim.cs
/// </summary>
public sealed partial class RpcClaim : pb::IMessage<RpcClaim> {
  private static readonly pb::MessageParser<RpcClaim> _parser = new pb::MessageParser<RpcClaim>(() => new RpcClaim());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RpcClaim> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClaimsIdentityRpcReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RpcClaim() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RpcClaim(RpcClaim other) : this() {
    value_ = other.value_;
    type_ = other.type_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RpcClaim Clone() {
    return new RpcClaim(this);
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 1;
  private string value_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Value {
    get { return value_; }
    set {
      value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 2;
  private string type_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Type {
    get { return type_; }
    set {
      type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RpcClaim);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RpcClaim other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Value != other.Value) return false;
    if (Type != other.Type) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Value.Length != 0) hash ^= Value.GetHashCode();
    if (Type.Length != 0) hash ^= Type.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Value.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Value);
    }
    if (Type.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Value.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
    }
    if (Type.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RpcClaim other) {
    if (other == null) {
      return;
    }
    if (other.Value.Length != 0) {
      Value = other.Value;
    }
    if (other.Type.Length != 0) {
      Type = other.Type;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Value = input.ReadString();
          break;
        }
        case 18: {
          Type = input.ReadString();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
