//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a running 'Start-ResGen' from tools\helper.psm1.
//   To add or remove a member, edit your .resx file then rerun 'Start-ResGen'.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

/// <summary>
/// A strongly-typed resource class, for looking up localized strings, etc.
/// </summary>
internal class PowerShellWorkerStrings {

    private static global::System.Resources.ResourceManager resourceMan;
    private static global::System.Globalization.CultureInfo resourceCulture;

    /// <summary>
    /// Returns the cached ResourceManager instance used by this class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    internal static global::System.Resources.ResourceManager ResourceManager {
        get {
            if (object.ReferenceEquals(resourceMan, null)) {
                global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("resources.PowerShellWorkerStrings", typeof(PowerShellWorkerStrings).Assembly);
                resourceMan = temp;
            }

            return resourceMan;
        }
    }

    /// <summary>
    /// Overrides the current threads CurrentUICulture property for all
    /// resource lookups using this strongly typed resource class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    internal static global::System.Globalization.CultureInfo Culture {
        get { return resourceCulture; }
        set { resourceCulture = value; }
    }

    
    /// <summary>
    /// Looks up a localized string similar to 
    ///   Azure Functions PowerShell Worker version [{0}].
    /// </summary>
    internal static string PowerShellWorkerVersion {
        get {
            return ResourceManager.GetString("PowerShellWorkerVersion", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   The 'entryPoint' property needs to be specified when 'scriptFile' points to a PowerShell module script file (.psm1).
    /// </summary>
    internal static string RequireEntryPointForScriptModule {
        get {
            return ResourceManager.GetString("RequireEntryPointForScriptModule", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   The 'entryPoint' property is supported only if 'scriptFile' points to a PowerShell module script file (.psm1).
    /// </summary>
    internal static string InvalidEntryPointForScriptFile {
        get {
            return ResourceManager.GetString("InvalidEntryPointForScriptFile", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   The binding '{0}' is declared with 'InOut' direction, which is not supported by PowerShell functions.
    /// </summary>
    internal static string InOutBindingNotSupported {
        get {
            return ResourceManager.GetString("InOutBindingNotSupported", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   No parameter defined in the script or function for the input binding '{0}'.
    /// </summary>
    internal static string MissingParameter {
        get {
            return ResourceManager.GetString("MissingParameter", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   No input binding defined for the parameter '{0}' that is declared in the script or function.
    /// </summary>
    internal static string UnknownParameter {
        get {
            return ResourceManager.GetString("UnknownParameter", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   The script file '{0}' has parsing errors:\n{1}
    /// </summary>
    internal static string FailToParseScript {
        get {
            return ResourceManager.GetString("FailToParseScript", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Cannot find the function '{0}' defined in '{1}'.
    /// </summary>
    internal static string CannotFindEntryPoint {
        get {
            return ResourceManager.GetString("CannotFindEntryPoint", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   More than one functions named '{0}' are found in '{1}'.
    /// </summary>
    internal static string MultipleEntryPointFound {
        get {
            return ResourceManager.GetString("MultipleEntryPointFound", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Function with the ID '{0}' was not loaded.
    /// </summary>
    internal static string FunctionNotLoaded {
        get {
            return ResourceManager.GetString("FunctionNotLoaded", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   The function app root hasn't been resolved yet!
    /// </summary>
    internal static string FunctionAppRootNotResolved {
        get {
            return ResourceManager.GetString("FunctionAppRootNotResolved", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   No '{0}' is found at the function app root folder: {1}.
    /// </summary>
    internal static string FileNotFound {
        get {
            return ResourceManager.GetString("FileNotFound", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Errors reported while executing profile.ps1. See logs for detailed errors. Profile location: {0}.
    /// </summary>
    internal static string ErrorsWhileExecutingProfile {
        get {
            return ResourceManager.GetString("ErrorsWhileExecutingProfile", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Unsupported message type: {0}.
    /// </summary>
    internal static string UnsupportedMessage {
        get {
            return ResourceManager.GetString("UnsupportedMessage", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   The given value for the 'http' output binding '{0}' cannot be converted to the type 'HttpResponseContext'. The conversion failed with the following error: {1}
    /// </summary>
    internal static string FailToConvertToHttpResponseContext {
        get {
            return ResourceManager.GetString("FailToConvertToHttpResponseContext", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Custom pipe name specified. You can attach to the process by using vscode or by running `Enter-PSHostProcess -CustomPipeName {0}`
    /// </summary>
    internal static string SpecifiedCustomPipeName {
        get {
            return ResourceManager.GetString("SpecifiedCustomPipeName", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Failed to get latest version for module '{0}' with major version '{1}'. {2} 
    /// </summary>
    internal static string FailToGetModuleLatestVersion {
        get {
            return ResourceManager.GetString("FailToGetModuleLatestVersion", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Function app does have required modules to install.
    /// </summary>
    internal static string FunctionAppDoesNotHaveRequiredModulesToInstall {
        get {
            return ResourceManager.GetString("FunctionAppDoesNotHaveRequiredModulesToInstall", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Dependency name is null or empty.
    /// </summary>
    internal static string DependencyNameIsNullOrEmpty {
        get {
            return ResourceManager.GetString("DependencyNameIsNullOrEmpty", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Started installing module '{0}' version '{1}'.
    /// </summary>
    internal static string StartedInstallingModule {
        get {
            return ResourceManager.GetString("StartedInstallingModule", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Module name '{0}' version '{1}' has been installed.
    /// </summary>
    internal static string ModuleHasBeenInstalled {
        get {
            return ResourceManager.GetString("ModuleHasBeenInstalled", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   The function app has existing dependencies installed. Updating the dependencies to the latest versions will be performed in the background. New function app instances will pick up any new dependencies.
    /// </summary>
    internal static string AcceptableFunctionAppDependenciesAlreadyInstalled {
        get {
            return ResourceManager.GetString("AcceptableFunctionAppDependenciesAlreadyInstalled", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   The PowerShell data file '{0}' is invalid since it cannot be evaluated into a Hashtable object.
    /// </summary>
    internal static string InvalidPowerShellDataFile {
        get {
            return ResourceManager.GetString("InvalidPowerShellDataFile", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Version specification '{0}' is not in the correct format. Please specify the exact version or use the following notation: '{1}'
    /// </summary>
    internal static string InvalidVersionFormat {
        get {
            return ResourceManager.GetString("InvalidVersionFormat", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Failed to install function app dependencies. Error: '{0}'
    /// </summary>
    internal static string FailToInstallFuncAppDependencies {
        get {
            return ResourceManager.GetString("FailToInstallFuncAppDependencies", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Failed to resolve '{0}' path in App Service.
    /// </summary>
    internal static string FailToResolveHomeDirectory {
        get {
            return ResourceManager.GetString("FailToResolveHomeDirectory", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Installing function app required modules to '{0}' (installation mode: {1}).
    /// </summary>
    internal static string InstallingFunctionAppRequiredModules {
        get {
            return ResourceManager.GetString("InstallingFunctionAppRequiredModules", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   The enforced concurrency level (pool size limit) is '{0}'.
    /// </summary>
    internal static string LogConcurrencyUpperBound {
        get {
            return ResourceManager.GetString("LogConcurrencyUpperBound", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   A new PowerShell manager instance is added to the pool. Current pool size '{0}'.
    /// </summary>
    internal static string LogNewPowerShellManagerCreated {
        get {
            return ResourceManager.GetString("LogNewPowerShellManagerCreated", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   The first managed dependency download is in progress, function execution will continue when it's done. Depending on the content of requirements.psd1, this can take a few minutes. Subsequent function executions will not block and updates will be performed in the background.
    /// </summary>
    internal static string DependencyDownloadInProgress {
        get {
            return ResourceManager.GetString("DependencyDownloadInProgress", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   The output binding '{0}' is already set with a value. The type of the output binding is '{1}'. It only accepts one message/record/file per a Function invocation. To override the value, use '-Clobber'.
    /// </summary>
    internal static string OutputBindingAlreadySet {
        get {
            return ResourceManager.GetString("OutputBindingAlreadySet", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   'Push-OutputBinding' should only be used in the PowerShell Language Worker's default runspace(s). Do not use it in a custom runspace created during the function execution because the pushed values cannot be collected.
    /// </summary>
    internal static string DontPushOutputOutsideWorkerRunspace {
        get {
            return ResourceManager.GetString("DontPushOutputOutsideWorkerRunspace", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   The specified name '{0}' cannot be resolved to a valid output binding of this function.
    /// </summary>
    internal static string BindingNameNotExist {
        get {
            return ResourceManager.GetString("BindingNameNotExist", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Unrecognized data collecting behavior '{0}'.
    /// </summary>
    internal static string UnrecognizedBehavior {
        get {
            return ResourceManager.GetString("UnrecognizedBehavior", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Failed to create function app dependencies destination path '{0}'. Please make sure you have write access to this location. Error '{1}'. 
    /// </summary>
    internal static string FailToCreateFunctionAppDependenciesDestinationPath {
        get {
            return ResourceManager.GetString("FailToCreateFunctionAppDependenciesDestinationPath", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Failed to install module '{0}' version '{1}'. {2} attempt. Error: '{3}'
    /// </summary>
    internal static string FailToInstallModule {
        get {
            return ResourceManager.GetString("FailToInstallModule", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   1st
    /// </summary>
    internal static string FirstAttempt {
        get {
            return ResourceManager.GetString("FirstAttempt", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   2nd
    /// </summary>
    internal static string SecondAttempt {
        get {
            return ResourceManager.GetString("SecondAttempt", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   3rd
    /// </summary>
    internal static string ThirdAttempt {
        get {
            return ResourceManager.GetString("ThirdAttempt", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Error: '{0}'
    /// </summary>
    internal static string ErrorDetails {
        get {
            return ResourceManager.GetString("ErrorDetails", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Function app dependencies upgrade skipped. Error details: {0}. 
    /// </summary>
    internal static string DependenciesUpgradeSkippedMessage {
        get {
            return ResourceManager.GetString("DependenciesUpgradeSkippedMessage", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Failed to remove old dependencies folder '{0}'. Error: '{1}'.
    /// </summary>
    internal static string FailedToRemoveDependenciesFolder {
        get {
            return ResourceManager.GetString("FailedToRemoveDependenciesFolder", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Removing dependencies folder '{0}'.
    /// </summary>
    internal static string RemovingDependenciesFolder {
        get {
            return ResourceManager.GetString("RemovingDependenciesFolder", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Failed to retrieve dependencies folder '{0}' access time. Error: '{1}'.
    /// </summary>
    internal static string FailedToRetrieveDependenciesFolderAccessTime {
        get {
            return ResourceManager.GetString("FailedToRetrieveDependenciesFolderAccessTime", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Updating dependencies folder heartbeat for '{0}''.
    /// </summary>
    internal static string UpdatingManagedDependencySnapshotHeartbeat {
        get {
            return ResourceManager.GetString("UpdatingManagedDependencySnapshotHeartbeat", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Failed to update dependencies folder heartbeat for '{0}'. Exception {1}: '{2}'.
    /// </summary>
    internal static string FailedToUpdateManagedDependencySnapshotHeartbeat {
        get {
            return ResourceManager.GetString("FailedToUpdateManagedDependencySnapshotHeartbeat", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Failed to install dependencies into '{0}' (installation mode: {1}), removing the folder.
    /// </summary>
    internal static string FailedToInstallDependenciesSnapshot {
        get {
            return ResourceManager.GetString("FailedToInstallDependenciesSnapshot", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   The number of entries in the '{0}' file is {1}, which exceeds the maximum supported number of entries ({2}).
    /// </summary>
    internal static string TooManyDependencies {
        get {
            return ResourceManager.GetString("TooManyDependencies", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Failed to compare dependency snapshots '{0}' and '{1}'. Error: '{2}'.
    /// </summary>
    internal static string FailedToCompareDependencySnapshots {
        get {
            return ResourceManager.GetString("FailedToCompareDependencySnapshots", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Removing dependency snapshot '{0}' because it is equivalent to '{1}'.
    /// </summary>
    internal static string RemovingEquivalentDependencySnapshot {
        get {
            return ResourceManager.GetString("RemovingEquivalentDependencySnapshot", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Promoted dependency snapshot '{0}' to '{1}' (installation mode: {2}).
    /// </summary>
    internal static string PromotedDependencySnapshot {
        get {
            return ResourceManager.GetString("PromotedDependencySnapshot", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Looking for a dependency snapshot newer than {0}.
    /// </summary>
    internal static string LookingForNewerDependencySnapshot {
        get {
            return ResourceManager.GetString("LookingForNewerDependencySnapshot", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   No newer dependency snapshot detected.
    /// </summary>
    internal static string NoNewerDependencySnapshotDetected {
        get {
            return ResourceManager.GetString("NoNewerDependencySnapshotDetected", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Detected newer dependency snapshot: '{0}'.
    /// </summary>
    internal static string NewerDependencySnapshotDetected {
        get {
            return ResourceManager.GetString("NewerDependencySnapshotDetected", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   The PowerShell worker process is exiting with exit code '{0}', expecting a restart.
    /// </summary>
    internal static string RestartingWorker {
        get {
            return ResourceManager.GetString("RestartingWorker", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Your function '{0}' is queuing requests as there are no available runspaces. You may be able to increase your throughput by following the best practices on https://aka.ms/functions-powershell-concurrency.
    /// </summary>
    internal static string FunctionQueuingRequest {
        get {
            return ResourceManager.GetString("FunctionQueuingRequest", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   First function load request completed in {0} ms.
    /// </summary>
    internal static string FirstFunctionLoadCompleted {
        get {
            return ResourceManager.GetString("FirstFunctionLoadCompleted", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Profile invocation completed in {0} ms.
    /// </summary>
    internal static string ProfileInvocationCompleted {
        get {
            return ResourceManager.GetString("ProfileInvocationCompleted", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Invoking function '{0}' code {1} ms after receiving request. Invocation performance details: {2}
    /// </summary>
    internal static string FunctionInvocationStarting {
        get {
            return ResourceManager.GetString("FunctionInvocationStarting", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Dependency snapshot '{0}' contains module '{1}' version '{2}'.
    /// </summary>
    internal static string DependencyShapshotContent {
        get {
            return ResourceManager.GetString("DependencyShapshotContent", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Failed to enumerate dependency snapshot '{0}' content: {1}
    /// </summary>
    internal static string FailedToEnumerateDependencySnapshotContent {
        get {
            return ResourceManager.GetString("FailedToEnumerateDependencySnapshotContent", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   CommandNotFoundException detected (error).
    /// </summary>
    internal static string CommandNotFoundException_Error {
        get {
            return ResourceManager.GetString("CommandNotFoundException_Error", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   CommandNotFoundException detected (exception).
    /// </summary>
    internal static string CommandNotFoundException_Exception {
        get {
            return ResourceManager.GetString("CommandNotFoundException_Exception", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   The Function app may be missing a module containing the '{0}' command definition. If this command belongs to a module available on the PowerShell Gallery, add a reference to this module to requirements.psd1. Make sure this module is compatible with PowerShell 7. For more details, see https://aka.ms/functions-powershell-managed-dependency. If the module is installed but you are still getting this error, try to import the module explicitly by invoking Import-Module just before the command that produces the error: this will not fix the issue but will expose the root cause.
    /// </summary>
    internal static string CommandNotFoundUserWarning {
        get {
            return ResourceManager.GetString("CommandNotFoundUserWarning", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   ModuleNotFound detected (error).
    /// </summary>
    internal static string ModuleNotFound_Error {
        get {
            return ResourceManager.GetString("ModuleNotFound_Error", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   ModuleNotFound detected (exception).
    /// </summary>
    internal static string ModuleNotFound_Exception {
        get {
            return ResourceManager.GetString("ModuleNotFound_Exception", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   The Function app may be missing the '{0}' module. If '{0}' is available on the PowerShell Gallery, add a reference to this module to requirements.psd1. Make sure this module is compatible with PowerShell 7. For more details, see https://aka.ms/functions-powershell-managed-dependency.
    /// </summary>
    internal static string ModuleNotFoundUserWarning {
        get {
            return ResourceManager.GetString("ModuleNotFoundUserWarning", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   PowerShell version: '{0}'.
    /// </summary>
    internal static string PowerShellVersion {
        get {
            return ResourceManager.GetString("PowerShellVersion", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Environment reload completed in {0} ms.
    /// </summary>
    internal static string EnvironmentReloadCompleted {
        get {
            return ResourceManager.GetString("EnvironmentReloadCompleted", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Function '{0}' is not found.
    /// </summary>
    internal static string FunctionNotFound {
        get {
            return ResourceManager.GetString("FunctionNotFound", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Function '{0}' does not have an activityTrigger input binding.
    /// </summary>
    internal static string FunctionDoesNotHaveProperActivityFunctionBinding {
        get {
            return ResourceManager.GetString("FunctionDoesNotHaveProperActivityFunctionBinding", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Setting current directory to '{0}'.
    /// </summary>
    internal static string SettingCurrentDirectory {
        get {
            return ResourceManager.GetString("SettingCurrentDirectory", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Number of dependency snapshots installed: '{0}'. Dependency snapshots to keep: '{1}'.
    /// </summary>
    internal static string LogDependencySnapshotsInstalledAndSnapshotsToKeep {
        get {
            return ResourceManager.GetString("LogDependencySnapshotsInstalledAndSnapshotsToKeep", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   No installed dependency snapshot found.
    /// </summary>
    internal static string NoInstalledDependencySnapshot {
        get {
            return ResourceManager.GetString("NoInstalledDependencySnapshot", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Last installed dependency snapshot found: '{0}'.
    /// </summary>
    internal static string LastInstalledDependencySnapshotFound {
        get {
            return ResourceManager.GetString("LastInstalledDependencySnapshotFound", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Dependency snapshot '{0}' manifest is equivalent to the current manifest.
    /// </summary>
    internal static string EquivalentDependencySnapshotManifest {
        get {
            return ResourceManager.GetString("EquivalentDependencySnapshotManifest", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Dependency snapshot '{0}' contains acceptable module versions.
    /// </summary>
    internal static string DependencySnapshotContainsAcceptableModuleVersions {
        get {
            return ResourceManager.GetString("DependencySnapshotContainsAcceptableModuleVersions", resourceCulture);
        }
    }

    /// <summary>
    /// Looks up a localized string similar to 
    ///   Dependency snapshot '{0}' does not contain acceptable module versions.
    /// </summary>
    internal static string DependencySnapshotDoesNotContainAcceptableModuleVersions {
        get {
            return ResourceManager.GetString("DependencySnapshotDoesNotContainAcceptableModuleVersions", resourceCulture);
        }
    }

}
